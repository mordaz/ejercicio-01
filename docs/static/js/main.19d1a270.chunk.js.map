{"version":3,"sources":["MenuApp.js","components/Habitacion.js","HabitacionesApp.js","MainApp.js","index.js"],"names":["MenuApp","setHabitaciones","className","onClick","e","habitaciones","nuevaHabitacion","numero","length","toString","estado","inf1","inf2","copiahabitaciones","push","map","habitacion","incremento","parseInt","Habitacion","console","log","HabitacionesApp","useState","titulo","setTitulo","useEffect","numhabitaciones","key","MainApp","divRoot","document","querySelector","ReactDOM","render"],"mappings":"+MAoEeA,EA1DC,SAAC,GAA2B,IAAxBC,EAAuB,EAAvBA,gBA6ChB,OAAQ,yBAAKC,UAAY,QACzB,4BAAQC,QAAU,SAACC,GAxCfH,GAAiB,SAACI,GAEd,IAEMC,EAAkB,CAACC,QAFHF,EAAaG,OAAS,EACT,KAAKC,WACKC,OAAQ,QAASC,KAAM,IAAKC,KAAM,cAEzEC,EAAiB,YAAOR,GAG9B,OAFAQ,EAAkBC,KAAKR,GAEfO,OA+BhB,aACA,4BAAQV,QAAU,SAACC,GAxBfH,GAAiB,SAACI,GAEd,IAAMQ,EAAiB,YAAOR,GAO9B,OANAQ,EAAkBE,KAAK,SAAAC,GACnB,IAAMC,EAAaC,SAASF,EAAWL,MAAQ,EAE/C,OADAK,EAAWL,KAAOM,EAAWR,WACtBO,KAGHH,OAehB,wBACA,4BAAQV,QAAU,SAACC,GATfH,GAAiB,SAACI,GAEd,MAAQ,CAAC,CAACE,OAAQ,MAAOG,OAAQ,QAASC,KAAM,IAAKC,KAAM,oBAOnE,eCNWO,EA1CI,SAAC,GAAsC,IAAnCZ,EAAkC,EAAlCA,OAAQG,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KAOzC,OACI,yBAAKV,UAAY,QAAQC,QAAU,SAACC,GAJpCgB,QAAQC,IAAR,sBAA2Bd,MAKvB,yBAAKL,UAAU,cACX,yBAAKA,UAAU,WAEf,yBAAKA,UAAU,UACX,+BAAMK,EAAN,OAGR,yBAAKL,UAAU,eACX,yBAAKA,UAAU,UACX,+BAAMQ,EAAN,OAEJ,yBAAKR,UAAU,QACX,+BAAMS,EAAN,MAEJ,yBAAKT,UAAU,cACX,+BAAMU,EAAN,OAGR,yBAAKV,UAAU,SACf,uBAAGA,UAAU,cCYVoB,EArCS,SAAC,GAAwB,IAArBjB,EAAoB,EAApBA,aAAoB,EAGbkB,mBAAU,IAHG,mBAGpCC,EAHoC,KAG3BC,EAH2B,KAY5C,OALAC,qBAAU,WACN,IAAMC,EAAkBtB,EAAaG,OACrCiB,EAAU,4BAAD,OAA+BE,MAC1C,CAACtB,EAAaG,SAER,oCACR,4BAAMgB,GACN,yBAAKtB,UAAY,cAITG,EAAaU,KAAK,SAAAC,GACd,OAAO,kBAAC,EAAD,CACHY,IAAOZ,EAAWT,OAClBA,OAASS,EAAWT,OACpBG,OAASM,EAAWN,OACpBC,KAAOK,EAAWL,KAClBC,KAAOI,EAAWJ,aCPvBiB,EAjBC,WAAM,MAKyBN,oBAAU,WAEjD,MAAQ,CAAC,CAAChB,OAAQ,MAAOG,OAAQ,QAASC,KAAM,IAAKC,KAAM,kBAP7C,mBAKVP,EALU,KAKKJ,EALL,KAUlB,OAAQ,oCACR,kBAAC,EAAD,CAASA,gBAAoBA,IAC7B,kBAAC,EAAD,CAAiBI,aAAiBA,MCbhCyB,EAAUC,SAASC,cAAc,SAIvCC,IAASC,OAAQ,kBAAC,EAAD,MAAcJ,I","file":"static/js/main.19d1a270.chunk.js","sourcesContent":["//importamos la libreria REACT que nos ayuda a devolver elementos JSX\n//los elementos JSX son elementos HTML combinados con elementos Javascript\nimport React from 'react';\n\n//libreria con herramientas para validar argumentos props\nimport PropTypes from 'prop-types';\n\n//creamos un componente funcional FC(Functional Component)\n//para poder devolver un FC es necesario importar React \n//en este caso como es el componente principal lo nombramos con la terminacion App \nconst MenuApp = ( { setHabitaciones } ) => {\n\n    //creamos la funcion que se ejecutara al hacer click al boton\n    const onClickAgregar = (e) => {\n        \n        //setHabitaciones recibe la variable del HOOK en este caso el contador y el arreglo de habitaciones\n        setHabitaciones( (habitaciones) => { \n            //obtenemos el numero de habitaciones creadas\n            const copiacontador = habitaciones.length + 1;\n            const numerohab = (copiacontador + 100).toString();\n            const nuevaHabitacion = {numero: numerohab , estado: 'Libre', inf1: '1', inf2: 'Recamarera' };\n            //a travez del operador spread hacemos una copia del arreglo y agregamos el nuevo\n            const copiahabitaciones = [...habitaciones];\n            copiahabitaciones.push(nuevaHabitacion);\n            //respondemos las variables actualizadas\n            return (copiahabitaciones); \n        });\n    }\n\n    //creamos la funcion que se ejecutara al hacer click al boton\n    const onClickTiempo = (e) => {\n\n        //setHabitaciones recibe la variable del HOOK en este caso el contador y el arreglo de habitaciones\n        setHabitaciones( (habitaciones) => { \n            //actualizamos el tiempo de las habitaciones\n            const copiahabitaciones = [...habitaciones];\n            copiahabitaciones.map( habitacion => {\n                const incremento = parseInt(habitacion.inf1) + 1;\n                habitacion.inf1 = incremento.toString();\n                return habitacion;                \n            })\n            //respondemos las variables actualizadas\n            return (copiahabitaciones); \n        });\n    }\n\n    //creamos la funcion que se ejecutara al hacer click al boton\n    const onClickLimpiar = (e) => {\n        //setHabitaciones recibe la variable del HOOK en este caso el contador y el arreglo de habitaciones\n        setHabitaciones( (habitaciones) => { \n            //respondemos las variables actualizadas\n            return ([{numero: '101', estado: 'Libre', inf1: '1', inf2: 'Recamarera' }]); \n        });\n    }\n\n    return (<div className = 'menu' >\n    <button onClick={ (e) => { onClickAgregar(e) }} > Agregar </button> \n    <button onClick={ (e) => { onClickTiempo(e) }} > Incrementar Tiempo </button> \n    <button onClick={ (e) => { onClickLimpiar(e) }} > Limpiar </button> \n    </div>);\n}\n\n//usando proptypes declaramos las properties que son obligatorias y su tipo\nMenuApp.propTypes = {\n    setHabitaciones: PropTypes.func.isRequired\n}\n\n//exportamos el copomente funcional FC\nexport default MenuApp;\n","//importamos la libreria REACT que nos ayuda a devolver elementos JSX\n//los elementos JSX son elementos HTML combinados con elementos Javascript\nimport React from 'react';\n\n//libreria con herramientas para validar argumentos props\nimport PropTypes from 'prop-types';\n\n//creamos un componente funcional FC(Functional Component)jh431Âºh 111\n//para poder devolver un FC es necesario importar React \n//en este caso como es un componente secundario se guarda en la carpeta components\nconst Habitacion = ( { numero, estado, inf1, inf2 } ) => {\n\n    //creamos la funcion que se ejecutara al hacer click al boton\n    const onClick = (e) => {\n        console.log(`Click desde ${numero}`);\n    }\n\n    return (  \n        <div className = 'boton' onClick={ (e) => { onClick(e) }}>\n            <div className=\"encabezado\">\n                <div className=\"imagen\">\n                </div>\n                <div className=\"numero\">\n                    <p> { numero } </p>\n                </div>  \n            </div>\n            <div className=\"informacion\">\n                <div className=\"estado\">\n                    <p> { estado }  </p>\n                </div>\n                <div className=\"hora\">\n                    <p> { inf1 } </p>\n                </div>\n                <div className=\"recamarera\">\n                    <p> { inf2 } </p>\n                </div>\n            </div>\n            <div className=\"area\"></div>\n            <p className=\"relleno\"></p>  \n        </div>\n    );\n}\n\n//usando proptypes declaramos las properties que son obligatorias y su tipo\nHabitacion.propTypes = {\n    numero: PropTypes.string.isRequired,\n    estado: PropTypes.string.isRequired,\n    inf1: PropTypes.string,\n    inf2: PropTypes.string\n}\n\n//exportamos el copomente funcional FC\nexport default Habitacion;","//importamos la libreria REACT que nos ayuda a devolver elementos JSX\n//los elementos JSX son elementos HTML combinados con elementos Javascript\nimport React, { useEffect, useState } from 'react';\n\n//libreria con herramientas para validar argumentos props\nimport PropTypes from 'prop-types';\n\n//importamos el componente de habitacion \nimport Habitacion from './components/Habitacion';\n\n//creamos un componente funcional FC(Functional Component)\n//para poder devolver un FC es necesario importar React \n//en este caso como es el componente principal lo nombramos con la terminacion App \nconst HabitacionesApp = ( { habitaciones } ) => {\n\n    //creamos otro HOOK para actualizar el titulo de numero de habitaciones\n    const [ titulo , setTitulo ] = useState ('');\n    \n    //usamos useEffect para actualizar el titulo del numero de habitaciones disponibles\n    //useEffect() se ejecuta cada que se actualiza \"renderiza\" el componente\n    useEffect(() => {\n        const numhabitaciones = habitaciones.length;\n        setTitulo( `Habitaciones disponibles ${ numhabitaciones }`);\n    },[habitaciones.length]);\n\n    return (<>\n    <h3>{ titulo }</h3>\n    <div className = 'contenedor'>   \n        {/*map es una funcion callback que recorre todo el arreglo de habitaciones*/}\n        {/*por cada habitacion econtrada va devolver un nuevo componente Habitacion*/}\n        {\n            habitaciones.map( habitacion => {\n                return <Habitacion\n                    key= { habitacion.numero }\n                    numero={ habitacion.numero }\n                    estado={ habitacion.estado }\n                    inf1={ habitacion.inf1 }\n                    inf2={ habitacion.inf2 }\n                />\n            })\n        }\n    </div></>);\n}\n\n//usando proptypes declaramos las properties que son obligatorias y su tipo\nHabitacionesApp.propTypes = {\n    habitaciones: PropTypes.array.isRequired\n}\n\n//exportamos el copomente funcional FC\nexport default HabitacionesApp;\n","//importamos la libreria REACT que nos ayuda a devolver elementos JSX\n//los elementos JSX son elementos HTML combinados con elementos Javascript\nimport React, { useState } from 'react';\n\n//importamos el componente de menu\nimport MenuApp from './MenuApp';\n\n//importamos el componente de habitaciones\nimport HabitacionesApp from './HabitacionesApp';\n\n//creamos un componente funcional FC(Functional Component)\n//para poder devolver un FC es necesario importar React \n//en este caso como es un componente principal lo nombramos con la terminacion App \nconst MainApp = () => {\n\n    //creamos un HOOK para hacer modificable nuestro componente JSK\n    //un HOOK consta de datos como primer parametro y \n    //una funcion que los actualiza como segundo parametro\n    const [ habitaciones , setHabitaciones ] = useState (() => {\n        //onActivate del hook, aqui se pueden cargar las habitaciones iniciales\n        return ([{numero: '101', estado: 'Libre', inf1: '1', inf2: 'Recamarera' }]);\n    });\n\n    return (<>\n    <MenuApp setHabitaciones = { setHabitaciones }/>\n    <HabitacionesApp habitaciones = { habitaciones } />\n    </>);\n}\n\n//exportamos el copomente funcional FC\nexport default MainApp; \n ","//libreria para trabajar con elementos JSX de REACT\nimport React from 'react';\n//libreria para manipular los elementos del documento HTML\nimport ReactDOM from 'react-dom';\n//importamos la plantilla CSS\nimport './index.css';\n\n//importamos el componente de habitaciones\nimport MainApp from './MainApp';\n\n//referenciamos el <div id=\"app\"></div> del documento principal index.html\n//para poder hacer esta referencia se requiere importar el react-dom\nconst divRoot = document.querySelector('#root');\n\n//enviamos el componente principal al documento HTML usando el ReactDOM\n//los componentes de react se deben enviar con <>\nReactDOM.render( <MainApp /> , divRoot );"],"sourceRoot":""}